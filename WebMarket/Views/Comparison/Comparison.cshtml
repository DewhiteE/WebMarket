@using Microsoft.AspNetCore.Identity
@using WebMarket.Data

@model ComparisonViewModel
@inject UserManager<AppUser> _userManager
@inject IMainRepository _repository
@{
    ViewData["Title"] = "Comparison";
}


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/css/ratingtable.css" rel="stylesheet" type="text/css" />
<link href="~/css/images.css" rel="stylesheet" type="text/css" />


<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>

<form asp-controller="Comparison" asp-area="" asp-action="FindProducts" method="post">
    <div class="form-group">
        <label for="lproductName">Left product name</label>
        <input type="text" class="form-control" name="lproductName" id="lproductName" placeholder="Enter product name" value="" onchange="rfindSimilar()" required />
    </div>
    <div class="form-group">
        <label for="rproductName">Right product name</label>
        <input type="text" class="form-control" name="rproductName" id="rproductName" placeholder="Enter product name" value="" @*onchange="lfindSimilar()"*@ required />
    </div>
    <button class="btn btn-primary" type="submit">Find</button>
</form>
<br>
<div class="container-fluid">
    <div class="row row-cols-1 row-cols-md-3">
        <br>
        @{
            var leftProduct = ComparisonViewModel.LeftProduct;
            var rightProduct = ComparisonViewModel.RightProduct;

            var user = _userManager.GetUserAsync(User).Result;

            if (leftProduct != null && rightProduct != null)
            {
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="padding-bottom: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        <div class="card-header @leftProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_header">
                            <h5 style="font-weight:300">@leftProduct.Type</h5>
                        </div>
                        @*<div style="transform:rotate(0);">
                            <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    <li data-target="#carouselExampleIndicators" data-slide-to="0" class="active"></li>
                                    <li data-target="#carouselExampleIndicators" data-slide-to="1"></li>
                                    <li data-target="#carouselExampleIndicators" data-slide-to="2"></li>
                                </ol>
                                <div class="carousel-inner">
                                    <div class="carousel-item active hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(leftProduct.ID, 0)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-left-0"
                                             onmouseover="onHoveredLeftImg(0)" onmouseout="onHoveredLeftImgOut(0)" src="@leftProduct.GetFirstImageSrc(_repository)" alt="First slide">
                                    </div>
                                    <div class="carousel-item hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(leftProduct.ID, 1)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-left-1"
                                             onmouseover="onHoveredLeftImg(1)" onmouseout="onHoveredLeftImgOut(1)" src="@leftProduct.GetSecondImageSrc(_repository)" alt="Second slide">
                                    </div>
                                    <div class="carousel-item hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(leftProduct.ID, 0)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-left-2"
                                             onmouseover="onHoveredLeftImg(2)" onmouseout="onHoveredLeftImgOut(2)" src="@leftProduct.GetThirdImageSrc(_repository)" alt="Third slide">
                                    </div>
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>*@
                        <partial name="~/Views/Product/_ProductImageCarouselPartial.cshtml" model='@new ProductImageCarouselViewModel(leftProduct, "catalog-comp", "img-left")' />
                        <div class="card-body" style="transform:rotate(0);">
                            <h4 class="card-title">
                                @leftProduct.Name
                            </h4>
                            <div class="overflower" aria-hidden="true">
                                <p class="card-text card-description">@leftProduct.Description</p>
                            </div>
                        </div>

                        <div class="card-footer @leftProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_footer">
                            <h3>
                                @leftProduct.FinalPriceString
                                <sup>
                                    @if (leftProduct.Price != leftProduct.FinalPrice)
                                    {
                                        <font color="red" style="font-weight:400"><del>@leftProduct.PriceString</del></font><sup> -@leftProduct.DiscountSupString</sup>
                                    }
                                </sup>
                            </h3>
                            <br>
                            <small class="text-warning @leftProduct.GetProductTableLinkClassString(_repository, user)">
                                Added @leftProduct.AddedDate.ToShortDateString()
                            </small>

                        </div>
                    </div>
                </div>
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="text-align:center">
                    <div class="card text-dark bg-white h-100">
                        <div class="card-header">Comparison</div>
                        <div class="card-body">
                            <h5 class="card-title">Briefly</h5>
                            <p class="card-text">@ComparisonViewModel.PriceComparisonText()</p>
                            <p class="card-text">@ComparisonViewModel.DiscountComparisonText()</p>
                            <p class="card-text">@ComparisonViewModel.AddedDateComparisonText()</p>
                            <h5 class="card-title">Comments</h5>
                            <p class="card-text">Some comments</p>
                            <h5 class="card-title">Conclusion</h5>
                            <p class="card-text">
                                Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="padding-bottom: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        <div class="card-header @rightProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_header">
                            <h5 style="font-weight:300">@rightProduct.Type</h5>
                        </div>
                        @*<div style="transform:rotate(0);">
                            <div id="carouselExampleIndicators2" class="carousel slide" data-ride="carousel">
                                <ol class="carousel-indicators">
                                    <li data-target="#carouselExampleIndicators2" data-slide-to="0" class="active"></li>
                                    <li data-target="#carouselExampleIndicators2" data-slide-to="1"></li>
                                    <li data-target="#carouselExampleIndicators2" data-slide-to="2"></li>
                                </ol>
                                <div class="carousel-inner">
                                    <div class="carousel-item active hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(rightProduct.ID, 0)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-right-0"
                                             onmouseover="onHoveredRightImg(0)" onmouseout="onHoveredRightImgOut(0)" src="@rightProduct.GetFirstImageSrc(_repository)" alt="First slide">
                                    </div>
                                    <div class="carousel-item hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(rightProduct.ID, 1)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-right-1"
                                             onmouseover="onHoveredRightImg(1)" onmouseout="onHoveredRightImgOut(1)" src="@rightProduct.GetSecondImageSrc(_repository)" alt="Second slide">
                                    </div>
                                    <div class="carousel-item hoverable-img">
                                        <div class="carousel-caption d-none d-md-block">
                                            <p class="hoverable-img-p">@_repository.GetImageByOrderIndex(rightProduct.ID, 2)?.Description</p>
                                        </div>
                                        <img class="d-block w-100 img-fluid catalog-img catalog-comp" id="img-right-2"
                                             onmouseover="onHoveredRightImg(2)" onmouseout="onHoveredRightImgOut(2)" src="@rightProduct.GetThirdImageSrc(_repository)" alt="Third slide">
                                    </div>
                                </div>
                                <a class="carousel-control-prev" href="#carouselExampleIndicators2" role="button" data-slide="prev">
                                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Previous</span>
                                </a>
                                <a class="carousel-control-next" href="#carouselExampleIndicators2" role="button" data-slide="next">
                                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                    <span class="sr-only">Next</span>
                                </a>
                            </div>
                        </div>*@
                        <partial name="~/Views/Product/_ProductImageCarouselPartial.cshtml" model='@new ProductImageCarouselViewModel(rightProduct, "catalog-comp", "img-right", 1)' />
                        <div class="card-body" style="transform:rotate(0);">
                            <h4 class="card-title">
                                @rightProduct.Name
                            </h4>
                            <div class="overflower" aria-hidden="true">
                                <p class="card-text card-description">@rightProduct.Description</p>
                            </div>

                            @*<a href="@rightProduct.Link" class="stretched-link"></a>*@
                        </div>

                        <div class="card-footer @rightProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_footer">

                            @*<div class="float-right">*@
                            <h3>
                                @rightProduct.FinalPriceString
                                <sup>
                                    @if (rightProduct.Price != rightProduct.FinalPrice)
                                    {
                                        <font color="red" style="font-weight:400"><del>@rightProduct.PriceString</del></font><sup> -@rightProduct.DiscountSupString</sup>
                                    }
                                </sup>
                            </h3>
                            <br>
                            <small class="text-warning @rightProduct.GetProductTableLinkClassString(_repository, user)">
                                Added @rightProduct.AddedDate.ToShortDateString()
                            </small>

                        </div>
                    </div>
                </div>
                <hr>
                <div class="col col-sm-12 col-md-12 col-lg-6" style="padding-top: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        @{
                            var lProduct = new ProductRatingTableViewModel(leftProduct, false);
                            <partial name="~/Views/Product/_RatingTablePartial.cshtml" model="@lProduct" />
                            <partial name="~/Views/Product/_CommentSectionPartial.cshtml" for="@lProduct" />
                        }
                    </div>
                </div>
                <div class="col col-sm-12 col-md-12 col-lg-6" style="padding-top: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        @{
                            var rProduct = new ProductRatingTableViewModel(rightProduct, true);
                            <partial name="~/Views/Product/_RatingTablePartial.cshtml" model="@rProduct" />
                            <partial name="~/Views/Product/_CommentSectionPartial.cshtml" for="@rProduct" />
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#lproductName").autocomplete({
                source: 'api/postapi/search'
            });
        });
    </script>

    <script>
        $(document).ready(function() {
            $($(".l-bar").get().reverse()).each(function (index, element) {
                $(element).width(getLeftFinalWidth(index+1)*100 + '%');
            });
            $($(".r-bar").get().reverse()).each(function (index, element) {
                $(element).width(getRightFinalWidth(index + 1) * 100 + '%');
            });
        });

        function getLeftFinalWidth(index) {
            switch (index) {
                case 1: return @leftProduct?.GetStarsPercent(1, _repository);
                case 2: return @leftProduct?.GetStarsPercent(2, _repository);
                case 3: return @leftProduct?.GetStarsPercent(3, _repository);
                case 4: return @leftProduct?.GetStarsPercent(4, _repository);
                case 5: return @leftProduct?.GetStarsPercent(5, _repository);
            }
        };

        function getRightFinalWidth(index) {
            switch (index) {
                case 1: return @rightProduct?.GetStarsPercent(1, _repository);
                case 2: return @rightProduct?.GetStarsPercent(2, _repository);
                case 3: return @rightProduct?.GetStarsPercent(3, _repository);
                case 4: return @rightProduct?.GetStarsPercent(4, _repository);
                case 5: return @rightProduct?.GetStarsPercent(5, _repository);
            }
        };
    </script>
}
