@using Microsoft.AspNetCore.Identity
@using WebMarket.Data
@using WebMarket.Models.ProductModels

@model ComparisonViewModel
@inject UserManager<AppUser> _userManager
@inject IMainRepository _repository
@{
    ViewData["Title"] = "Comparison";
}


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/css/ratingtable.css" rel="stylesheet" type="text/css" />
<link href="~/css/images.css" rel="stylesheet" type="text/css" />


<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>

<form asp-controller="Comparison" asp-area="" asp-action="FindProducts" method="post">
    <div class="form-group">
        <label for="lproductName">Left product name</label>
        <input type="text" class="form-control" name="lproductName" id="lproductName" placeholder="Enter product name" value="" onchange="rfindSimilar()" required />
    </div>
    <div class="form-group">
        <label for="rproductName">Right product name</label>
        <input type="text" class="form-control" name="rproductName" id="rproductName" placeholder="Enter product name" value="" @*onchange="lfindSimilar()"*@ required />
    </div>
    <button class="btn btn-primary" type="submit">Find</button>
</form>
<br>

@if (Model.RightProductNotFound && Model.LeftProductNotFound)
{
    <p class="text-danger">None of the products (@Model.LeftProductName or @Model.RightProductName) has been found...</p>
}
else if (Model.RightProductNotFound)
{
    <p class="text-danger">Right product (@Model.RightProductName) was not found...</p>
}
else if (Model.LeftProductNotFound)
{
    <p class="text-danger">Left product (@Model.LeftProductName) was not found...</p>
}

<div class="container-fluid">
    <div class="row row-cols-1 row-cols-md-3">
        <br>
        @{
            var user = _userManager.GetUserAsync(User).Result;

            if (Model.LeftProduct != null && Model.RightProduct != null)
            {
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="padding-bottom: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        <div class="card-header @Model.LeftProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_header">
                            <h5 style="font-weight:300">@Model.LeftProduct.Type</h5>
                        </div>
                        <partial name="~/Views/Product/_ProductImageCarouselPartial.cshtml" model='@new ProductImageCarouselViewModel(Model.LeftProduct, "catalog-comp", "img-left")' />
                        <div class="card-body" style="transform:rotate(0);">
                            <h4 class="card-title">
                                @Model.LeftProduct.Name
                            </h4>
                            <div class="overflower" aria-hidden="true">
                                <p class="card-text card-description">@Model.LeftProduct.Description</p>
                            </div>
                        </div>

                        <div class="card-footer @Model.LeftProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_footer">
                            <h3>
                                @Model.LeftProduct.FinalPriceString
                                <sup>
                                    @if (Model.LeftProduct.Price != Model.LeftProduct.FinalPrice)
                                    {
                                        <font color="red" style="font-weight:400"><del>@Model.LeftProduct.PriceString</del></font><sup> -@Model.LeftProduct.DiscountSupString</sup>
                                    }
                                </sup>
                            </h3>
                            <br>
                            <small class="text-warning @Model.LeftProduct.GetProductTableLinkClassString(_repository, user)">
                                Added @Model.LeftProduct.AddedDate.ToShortDateString()
                            </small>

                        </div>
                    </div>
                </div>
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="text-align:center">
                    <div class="card text-dark bg-white h-100">
                        <div class="card-header">Comparison</div>
                        <div class="card-body">
                            <h5 class="card-title">Briefly</h5>
                            <p class="card-text">@Model.PriceComparisonText()</p>
                            <p class="card-text">@Model.DiscountComparisonText()</p>
                            <p class="card-text">@Model.AddedDateComparisonText()</p>
                            <p class="card-text">@Model.TagsText()</p>
                            <p class="card-text">@Model.PopularityText()</p>
                            <p class="card-text">@Model.FileSizeText()</p>
                            <p class="card-text">
                            </p>
                        </div>
                    </div>
                </div>
                <div class="col col-xs-12 col-sm-12 col-md-4 col-lg-4" style="padding-bottom: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        <div class="card-header @Model.RightProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_header">
                            <h5 style="font-weight:300">@Model.RightProduct.Type</h5>
                        </div>
                        <partial name="~/Views/Product/_ProductImageCarouselPartial.cshtml" model='@new ProductImageCarouselViewModel(Model.RightProduct, "catalog-comp", "img-right", 1)' />
                        <div class="card-body" style="transform:rotate(0);">
                            <h4 class="card-title">
                                @Model.RightProduct.Name
                            </h4>
                            <div class="overflower" aria-hidden="true">
                                <p class="card-text card-description">@Model.RightProduct.Description</p>
                            </div>
                        </div>

                        <div class="card-footer @Model.RightProduct.GetTableHeaderClassString(_repository, user)" id="card_on_transaction_footer">
                            <h3>
                                @Model.RightProduct.FinalPriceString
                                <sup>
                                    @if (Model.RightProduct.Price != Model.RightProduct.FinalPrice)
                                    {
                                        <font color="red" style="font-weight:400"><del>@Model.RightProduct.PriceString</del></font><sup> -@Model.RightProduct.DiscountSupString</sup>
                                    }
                                </sup>
                            </h3>
                            <br>
                            <small class="text-warning @Model.RightProduct.GetProductTableLinkClassString(_repository, user)">
                                Added @Model.RightProduct.AddedDate.ToShortDateString()
                            </small>

                        </div>
                    </div>
                </div>
                <hr>
                <div class="col col-sm-12 col-md-12 col-lg-6" style="padding-top: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        @{
                            var lProduct = new ProductRatingTableViewModel(Model.LeftProduct, false);
                            <partial name="~/Views/Product/_RatingTablePartial.cshtml" model="@lProduct" />
                            <partial name="~/Views/Product/_CommentSectionPartial.cshtml" for="@lProduct" />
                        }
                    </div>
                </div>
                <div class="col col-sm-12 col-md-12 col-lg-6" style="padding-top: 2rem;">
                    <div class="card h-100 hoverable-card" id="card_on_transaction">
                        @{
                            var rProduct = new ProductRatingTableViewModel(Model.RightProduct, true);
                            <partial name="~/Views/Product/_RatingTablePartial.cshtml" model="@rProduct" />
                            <partial name="~/Views/Product/_CommentSectionPartial.cshtml" for="@rProduct" />
                        }
                    </div>
                </div>
            }
        }
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            $("#lproductName").autocomplete({
                source: 'api/postapi/search'
            });
        });
    </script>

    <script>
        $(document).ready(function() {
            $($(".l-bar").get().reverse()).each(function (index, element) {
                $(element).width(getLeftFinalWidth(index+1)*100 + '%');
            });
            $($(".r-bar").get().reverse()).each(function (index, element) {
                $(element).width(getRightFinalWidth(index + 1) * 100 + '%');
            });
        });

        function getLeftFinalWidth(index) {
            switch (index) {
                case 1: return @Model.LeftProduct?.GetStarsPercent(1, _repository);
                case 2: return @Model.LeftProduct?.GetStarsPercent(2, _repository);
                case 3: return @Model.LeftProduct?.GetStarsPercent(3, _repository);
                case 4: return @Model.LeftProduct?.GetStarsPercent(4, _repository);
                case 5: return @Model.LeftProduct?.GetStarsPercent(5, _repository);
            }
        };

        function getRightFinalWidth(index) {
            switch (index) {
                case 1: return @Model.RightProduct?.GetStarsPercent(1, _repository);
                case 2: return @Model.RightProduct?.GetStarsPercent(2, _repository);
                case 3: return @Model.RightProduct?.GetStarsPercent(3, _repository);
                case 4: return @Model.RightProduct?.GetStarsPercent(4, _repository);
                case 5: return @Model.RightProduct?.GetStarsPercent(5, _repository);
            }
        };
    </script>
}
