@using Microsoft.AspNetCore.Identity
@using WebMarket.Data

@model CatalogViewModel
@inject IMainRepository _repository
@inject UserManager<AppUser> _userManager

@{
    ViewData["Title"] = "Catalog";

    CatalogViewModel.CurrentAppUser = _userManager.GetUserAsync(User).Result;
}

@*<script>
        function onCardClick(cardIndex) {
            const card = document.getElementById("card_" + cardIndex);
            if (card.click())
        }
    </script>*@
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/css/images.css" rel="stylesheet" type="text/css" />
<link href="~/css/tags.css" rel="stylesheet" type="text/css" />

<script src="https://kit.fontawesome.com/37c897dddf.js" crossorigin="anonymous"></script>

<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
<script type="text/javascript">
</script>

@section scripts
{
    <script type="text/javascript">

        //$(document).ready(function () {
        //    alert("HELLO");
        //})

        function onClickedCard(clicked_id) {
        }

        function addOnHoverDiv(hovered_id) {
            let card_id = "#card_expand_" + hovered_id;
        }
        function onHoveredCard(hovered_id) {
        }
        function onHoveredCardOut(hovered_id) {
        }

        function onHoveredButton(hovered_id) {
            let btn_id = "#card_addtocart_button_" + hovered_id;
            if ($(btn_id).text() == "+") {
                $(btn_id).text("Buy");
            }
            if ($(btn_id).text() == "Bought") {
                $(btn_id).text("Sell");
            }
        }
        function onHoveredButtonOut(hovered_id) {
            let btn_id = "#card_addtocart_button_" + hovered_id;
            if ($(btn_id).text() == "Buy") {
                $(btn_id).text("+");
            }
            if ($(btn_id).text() == "Sell") {
                $(btn_id).text("Bought");
            }
        }

        function addTag() {
            let node = document.createElement("SPAN");
            node.className += "badge badge-pill badge-primary tag";
            node.style.marginLeft = "12px";
            node.id = $("#productType_add").val();
            let text_node = document.createTextNode($("#productType_add").val());
            node.appendChild(text_node);

            //! adding cross for deleting tag
            let cross_node = document.createElement("I");
            cross_node.className += "fas fa-times tag-cross";
            cross_node.style.paddingLeft = "4px";
            node.appendChild(cross_node);

            if (document.getElementById(node.id) == null) {
                document.getElementById("tags").appendChild(node);
            }

            //! binding removing of a tag on click
            $(cross_node).on('click', function () {
                $(this).parent().remove();
            });
        }

        function addFindTag() {
            let node = document.createElement("SPAN");
            node.className += "badge badge-pill badge-primary tag";
            node.style.marginLeft = "12px";
            node.id = $("#findTag").val();
            let text_node = document.createTextNode($("#findTag").val());
            node.appendChild(text_node);

            //! adding cross for deleting tag
            let cross_node = document.createElement("I");
            cross_node.className += "fas fa-times tag-cross";
            cross_node.style.paddingLeft = "4px";
            node.appendChild(cross_node);

            if (document.getElementById(node.id) == null) {
                document.getElementById("findTags").appendChild(node);
            }

            //! binding removing of a tag on click
            $(cross_node).on('click', function () {
                $(this).parent().remove();
            });
        }

        function countChars(obj) {
            var maxLength = obj.maxLength;
            var strLength = obj.value.length;
            var charRemain = (maxLength - strLength);

            if (charRemain < 0) {
                document.getElementById('descriptionCharCounter_add').innerHTML = '<span style="color:red;">You have exceeded the limit of ' + maxLengthZ + ' characters</span>';
            }
            else {
                document.getElementById('descriptionCharCounter_add').innerHTML = charRemain + ' characters remaining';
            }
        }

        function sortProducts() {

        }

        $("#submitProductButton").on("click", function (e) {
            var tags_array = [];

            $('#tags > span').each(function () {
                tags_array.push($(this).text());
            });
            var prod_name = $('#productName_add').val();
            //var prod_type = $('#productType_add').val();
            //var prod_cost = $('#productCost_add').val();
            //var prod_discount = $('#productDiscount_add').val();
            //var prod_desc = $('#productDescription_add').val();
            //var prod_img_link = $('#productImageLink_add').val();
            //var prod_img_desc = $('#productImageDescription_add').val();
            //var prod_second_img_link = $('#secondImageLink_add').val();
            //var prod_second_img_desc = $('#secondImageDescription_add').val();
            //var prod_third_img_link = $('#thirdImageLink_add').val();
            //var prod_third_img_desc = $('#thirdImageDescription_add').val();
            //var prod_link = $('#productLink_add').val();
            var prod_zip = $('#productZipFile').val();

            $.ajax({
                type: "post",
                dataType: "json",
                url: "/Catalog/AddProduct",
                traditional: true,
                data: {
                    productName: prod_name,
                    //productType: prod_type,
                    tags: tags_array,
                    //productCost: prod_cost,
                    //productDiscount: prod_discount,
                    //productDescription: prod_desc,
                    //productImageLink: prod_img_link,
                    //productImageDescription: prod_img_desc,
                    //secondImageLink: prod_second_img_link,
                    //secondImageDescription: prod_second_img_desc,
                    //thirdImageLink: prod_third_img_link,
                    //thirdImageDescription: prod_third_img_desc,
                    //productLink: prod_link
                    productZipFile: prod_zip
                },
                success: function (data) {
                    console.log(data.message);
                },
            });
        });

        $("#applyShowProductsButton").on("click", function (e) {
            //e.preventDefault();

            var find_tags_array = [];

            $('#findTags > span').each(function () {
                find_tags_array.push($(this).text());
            })

            $.ajax({
                type: "post",
                dataType: "json",
                url: "/Catalog/SubmitTags",
                traditional: true,
                data: {
                    findTags: find_tags_array,
                },
                success: function (data) {
                    condole.log(data.message);
                },
            });
        });

        //$(document).ready(function () {
        //    $("#productZipFile").on("change", function () {
        //        var files = $(this).get(0).files;
        //        var formData = new FormData();
        //        for (var i = 0; i < files.length; i++) {
        //            formData.append(files[i].name, files[i]);
        //        }

        //        uploadFiles(formData);
        //    });
        //});

        //function uploadFiles(formData) {
        //    $.ajax({
        //        url: "",
        //        method: "POST",
        //        data: formData,
        //        success: function (data) {

        //        },
        //        error: function (data) {
        //            alert("Upload failed!");
        //        }
        //    });
        //}

    </script>
}

<style>
    img {
        width: 100%;
        max-width: 600px;
        max-height: 400px;
    }

    .expanded-div {
        position: absolute;
    }

    .expanded-a {
        position: absolute;
        text-align: right;
    }

    .expanded-p {
        padding-top: 2em;
        position: absolute;
        text-align: right;
    }

    .expanded-btn {
        position: absolute;
        text-align: center;
    }

    .card-description {
        /*white-space: nowrap;*/
        overflow: hidden;
        text-overflow: ellipsis;
        max-height: 100px;
    }

    .side-btn {
        min-width: 78px !important;
    }

    .hoverable-btn {
        min-width: 78px !important;
        transition: 1s;
    }

    .hoverable-card {
        transition: 1s;
    }

        .hoverable-card:hover {
            transform: scale(1.05);
        }

    /*https://www.kizu.ru/flexible-overflow/*/
    .overflower {
        /*display: block;*/
        /*overflow: auto;*/
        /*box-sizing: border-box;*/
        /*max-width: 100%;
        height: 1em;
        line-height: 1em;
        white-space: nowrap;
        text-overflow: ellipsis;*/
    }

    .overflower-long {
        display: inline;
    }

    .overflower-short {
        display: none;
    }

    @@supports (flex-wrap: wrap) {
        .overflower {
            display: inline-flex;
            flex-wrap: wrap;
        }

        .overflower-short {
            display: block;
            overflow: hidden;
            flex-grow: 1;
            width: 0;
            text-overflow: ellipsis;
        }

        .overflower-long {
            flex-basis: 100%;
        }
    }
</style>

<div class="float-right">
    <h2>@_userManager.GetUserAsync(User).Result?.MoneyString</h2>
</div>
<div style="padding-bottom:1em"></div>
<div class="d-inline">
    <a type="button" class="btn btn-outline-primary" asp-area="" asp-controller="Comparison" asp-action="Comparison">Compare</a>
</div>
<div class="d-inline">
    <a type="button" class="btn btn-outline-primary" asp-area="" asp-controller="Product" asp-action="Add">Add new</a>
</div>
<div style="padding-bottom:1em"></div>

<div style="padding-bottom:1em"></div>
@if (CatalogViewModel.FindTags?.Count > 0)
{
    <p class="text-body text-muted">Showing only products with the following tags: <a data-toggle="modal" data-target="#infoCatalogModal"><i class="far fa-question-circle"></i></a></p>
    foreach (var findTag in CatalogViewModel.FindTags)
    {
        <span class="badge badge-pill badge-primary">@findTag</span>
    }
    <div style="padding-bottom:1em"></div>
}
else
{
    <p class="text-body text-muted">Showing all products. <a data-toggle="modal" data-target="#infoCatalogModal"><i class="far fa-question-circle"></i></a></p>
}


@switch (CatalogViewModel.ViewVariant)
{
    case CatalogViewModel.CatalogViewVariant.Table:
        {
            <table class="table table-light table-striped table-hover">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Add</th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByName">
                                Product Name
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByType">
                                Type
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByPrice">
                                Price
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByDiscount">
                                Discount
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByFinalPrice">
                                Final
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark">
                                Link
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count; i++)
                    {
                        string tdClassString = CatalogViewModel.ListOfProducts[i].GetPriceTableClassString(_repository, CatalogViewModel.CurrentAppUser);
                        string buttonClassString = CatalogViewModel.ListOfProducts[i].GetAddToCartButtonClassString(_repository, CatalogViewModel.CurrentAppUser);
                        var linkClass = CatalogViewModel.ListOfProducts[i].GetProductTableLinkClassString(_repository, CatalogViewModel.CurrentAppUser);
                        var thClass = CatalogViewModel.ListOfProducts[i].GetTableHeaderClassString(_repository, CatalogViewModel.CurrentAppUser);
                        <tr>
                            <th scope="row" class="@thClass">@i</th>
                            <th scope="row" class="@thClass">
                                <form asp-controller="Catalog" asp-action="AddToCart" method="post">
                                    <input type="hidden" class="form-control" name="productName" id="productName" value=@CatalogViewModel.ListOfProducts[i].Name />
                                    <input type="hidden" class="form-control" name="productIndex" id="productIndex" value=@i />
                                    @*<a class="text-dark" name="productName" asp-area="" asp-controller="Catalog" asp-action="AddToCart">
                                            @CatalogViewModel.ListOfProducts[i].IsBoughtString
                                        </a>*@
                                    <button class="@CatalogViewModel.ListOfProducts[i].GetAddToCartButtonClassString(_repository, CatalogViewModel.CurrentAppUser)" type="submit">@CatalogViewModel.ListOfProducts[i].IsBoughtString(_repository, CatalogViewModel.CurrentAppUser)</button>
                                </form>
                            </th>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].Name
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].Type
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].PriceString
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].DiscountString
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].FinalPriceString
                            </td>
                            <td class="@tdClassString">
                                <a href=@CatalogViewModel.ListOfProducts[i].Link class="@linkClass">
                                    <ins><strong>@CatalogViewModel.ListOfProducts[i].LinkTableString</strong></ins>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            break;
        }
    case CatalogViewModel.CatalogViewVariant.Main:
        {
            <div class="float-right mb-5">
                <div class="card bg-light mb-3" style="max-width: 12rem;">
                    <form class="" asp-controller="Catalog" asp-area="" asp-action="SortProducts" method="post">
                        <div class="card-header">Filters <a data-toggle="modal" data-target="#infoFilterModal"><i class="far fa-question-circle"></i></a></div>
                        <div class="card-body pb-0">
                            <h6 class="card-title">Sort by</h6>
                        </div>
                        <div class="input-group col-12">
                            <select name="sortOptionIndex" id="sortOptionIndex" class="custom-select form-control form-control-sm">
                                <option value="0" selected>Default</option>
                                <option value="1">by Name</option>
                                <option value="2">by Type</option>
                                <option value="3">by Price</option>
                                <option value="4">by Discount</option>
                                <option value="5">by Final Price</option>
                            </select>
                        </div>
                        <div class="pt-2">
                            <button class="btn btn-primary ml-4 mr-4 side-btn" type="submit">Sort</button>
                        </div>
                        @*asp-controller="Catalog" asp-area="" asp-action="SubmitTags" method="post"*@
                    </form>
                    <hr />
                    <form asp-controller="Catalog" asp-area="" asp-action="SubmitShowProducts" method="post">
                        <div class="card-body pt-0 mt-0 pb-0">
                            <h6 class="card-title">Find by</h6>
                        </div>
                        @*<p class="card-text text-center">Tags</p>*@
                        <div class="input-group col-md-12">
                            @*<label for="findTag">Tags</label>*@
                            <select name="findTag" id="findTag" class="custom-select form-control form-control-sm" asp-items="@(new SelectList(CatalogViewModel.ListOfProductTypes))">
                            </select>
                            <div class="input-group-append">
                                <button class="btn btn-primary btn-sm" type="button" onclick="addFindTag()">+</button>
                            </div>
                        </div>
                        <div id="findTags" class="pt-2 pb-2">
                            <!-- There will be all tags -->
                        </div>
                        <hr />
                        <div class="ml-3">
                            <div class="custom-control custom-radio custom-control-inline">
                                <input type="radio" id="catalogLength3" name="catalogLength" class="custom-control-input" value="3">
                                <label class="custom-control-label" for="catalogLength3">Show 3 items</label>
                            </div>
                            <div class="custom-control custom-radio custom-control-inline">
                                <input type="radio" id="catalogLength6" name="catalogLength" class="custom-control-input" value="6">
                                <label class="custom-control-label" for="catalogLength6">Show 6 items</label>
                            </div>
                            <div class="custom-control custom-radio custom-control-inline">
                                <input type="radio" id="catalogLengthAll" name="catalogLength" class="custom-control-input" value="@_repository.GetAllProducts().Count()">
                                <label class="custom-control-label" for="catalogLengthAll">Show all items</label>
                            </div>
                        </div>
                        @*<hr />*@
                        <div class="pt-2">
                            <button id="applyShowProductsButton" class="btn btn-primary ml-4 mr-4 side-btn" type="submit">Apply</button>
                        </div>
                        <hr />
                    </form>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row row-cols-1 row-cols-md-3">
                    @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count(); i++)
                    {
                        var product = CatalogViewModel.ListOfProducts.ElementAt(i);   //_repository.GetAllProducts().ElementAt(i);
                        string tdClassString = product.GetPriceTableClassString(_repository, CatalogViewModel.CurrentAppUser);
                        string buttonClassString = product.GetAddToCartButtonClassString(_repository, CatalogViewModel.CurrentAppUser);
                        var linkClass = product.GetProductTableLinkClassString(_repository, CatalogViewModel.CurrentAppUser);
                        var thClass = product.GetTableHeaderClassString(_repository, CatalogViewModel.CurrentAppUser);


                        if (CatalogViewModel.FindTags?.Count > 0)
                        {
                            if (!product.ContainsTags(CatalogViewModel.FindTags, _repository))
                                continue;
                        }

                        <div class="col col-xs-12 col-sm-12 col-md-6 col-lg-4" style="padding-bottom: 2rem;">
                            <div class="card h-100 hoverable-card" id="card_@i" onmouseover="onHoveredCard(@i)" onmouseout="onHoveredCardOut(@i)">
                                <div style="transform:rotate(0);">
                                    <a href="@product.Link" class="stretched-link">
                                        <img class="d-block w-100 img-fluid catalog-img catalog-main card-img-top" src="@product.GetImageSrc(_repository, null)" alt="Cat Lawyer Is Real And He Is Everything Right Now | Above the Law">
                                    </a>
                                    <div class="card-img-overlay">
                                        <h6 style="font-weight:300">@product.Type</h6>
                                    </div>
                                </div>
                                <div class="card-body pt-1" style="transform:rotate(0);">
                                    <h5 class="card-title">
                                        @product.Name
                                    </h5>
                                    <div class="overflower" aria-hidden="true">
                                        <p class="card-text card-description">@product.Description</p>
                                    </div>
                                    <div>
                                        @{
                                            foreach (var tag in _repository.GetTagNamesByProductId(product.ID))
                                            {
                                                <span class="badge badge-pill badge-primary">@tag@*.Text*@</span>
                                            }
                                        }
                                    </div>
                                    <a href="@product.Link" class="stretched-link"></a>
                                </div>

                                <div class="card-footer @product.GetTableHeaderClassString(_repository, CatalogViewModel.CurrentAppUser)" id="card_footer_@i" onclick="onClickedCard(@i)">
                                    <h3>
                                        @product.FinalPriceString
                                        <sup>
                                            @if (product.Price != product.FinalPrice)
                                            {
                                                <font color="red" style="font-weight:400"><del>@product.PriceString</del></font><sup> -@product.DiscountSupString</sup>
                                            }
                                        </sup>
                                    </h3>
                                    <div class="float-right">
                                        <form asp-controller="Catalog" asp-action="AddToCart" method="post">
                                            <input type="hidden" class="form-control" name="productId" id="productId" value=@product.ID />
                                            <button class="@product.GetAddToCartButtonClassString(_repository, CatalogViewModel.CurrentAppUser) hoverable-btn" type="submit" id="card_addtocart_button_@i" onmouseover="onHoveredButton(@i)" onmouseout="onHoveredButtonOut(@i)">@product.GetAddToCartButtonString(_repository, CatalogViewModel.CurrentAppUser)</button>
                                        </form>
                                    </div>
                                    <small class="text-warning @product.GetProductTableLinkClassString(_repository, CatalogViewModel.CurrentAppUser)">
                                        Added @product.AddedDate.ToShortDateString()
                                    </small>

                                </div>
                                <div id="card_expand_@i"></div>
                            </div>
                            @*</a>*@
                        </div>
                    }
                </div>
            </div>
            break;
        }
}


<div class="modal" id="infoFilterModal" tabindex="-1" role="dialog" aria-labelledby="infoFilterModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="infoFilterModalLongTitle">Help | Filters</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                You can apply filters in the catalog to find everything you need in just few clicks.
                <p class="pt-4"><b>Sort By</b></p>
                <ul>
                    <li>Use "Sort By" section to sort products in the way you like.</li>
                </ul>
                <p class=""><b>Find By</b></p>
                <ul>
                    <li>Use "Find By" section if you want to see only those products that match your needs.</li>
                    <li>To apply finding - just select the Product Type, then press the plus button. Add as many types as you want. And then click the Apply button when you ready.</li>
                    <li>You can also check the "Fully matching" checkbox, in case you want to see only those products that has all the tags you have added.</li>
                </ul>
                <p class=""><b>Display</b></p>
                <ul>
                    <li>Use "Display" settings to show only specific count of products on page at the same time.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <a class="btn btn-light float-left" data-dismiss="modal" data-toggle="modal" href="#infoCatalogModal">Next help</a>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="modal" id="infoCatalogModal" tabindex="-1" role="dialog" aria-labelledby="infoCatalogModalTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content bg-dark text-white">
            <div class="modal-header">
                <h5 class="modal-title" id="infoCatalogModalLongTitle">Help | Catalog</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Catalog contains all the products from the database. You can apply settings in the filter section to change the way products appear to you.
                <p class="pt-4"><b>Color Meanings</b></p>
                <ul>
                    <li>Blue - if the product appear with the blue footer it means that you have bought or got it already.</li>
                    <li>Black - in case the product has black footer it means that you have selected this product, or you are the owner of this product.</li>
                </ul>
            </div>
            <div class="modal-footer">
                <a class="btn btn-light float-left" data-dismiss="modal" data-toggle="modal" href="#infoFilterModal">Next help</a>
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>