@model CatalogViewModel
@{
    ViewData["Title"] = "Catalog";
}

@*<script>
        function onCardClick(cardIndex) {
            const card = document.getElementById("card_" + cardIndex);
            if (card.click())
        }
    </script>*@
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/css/images.css" rel="stylesheet" type="text/css" />
<link href="~/css/tags.css" rel="stylesheet" type="text/css" />

<script src="https://kit.fontawesome.com/37c897dddf.js" crossorigin="anonymous"></script>

<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
<script type="text/javascript">

    //$(document).ready(function () {
    //    alert("HELLO");
    //})

    function onClickedCard(clicked_id) {
    }

    function addOnHoverDiv(hovered_id) {
        let card_id = "#card_expand_" + hovered_id;
    }
    function onHoveredCard(hovered_id) {
    }
    function onHoveredCardOut(hovered_id) {
    }

    function onHoveredButton(hovered_id) {
        let btn_id = "#card_addtocart_button_" + hovered_id;
        if ($(btn_id).text() == "+") {
            $(btn_id).text("Buy");
        }
        if ($(btn_id).text() == "Bought") {
            $(btn_id).text("Sell");
        }
    }
    function onHoveredButtonOut(hovered_id) {
        let btn_id = "#card_addtocart_button_" + hovered_id;
        if ($(btn_id).text() == "Buy") {
            $(btn_id).text("+");
        }
        if ($(btn_id).text() == "Sell") {
            $(btn_id).text("Bought");
        }
    }

    function addTag() {
        let node = document.createElement("SPAN");
        node.className += "badge badge-pill badge-primary tag";
        node.style.marginLeft = "12px";
        node.id = $("#productType_add").val();
        let text_node = document.createTextNode($("#productType_add").val());
        node.appendChild(text_node);
        //$(".badge").each(function (index, element) {
        //    if (element.id == node.id)
        //        return;
        //});
        //if (document.getElementById($("#productType").val()).val() != text_node.val())
        if (document.getElementById(node.id) == null) {
            document.getElementById("tags").appendChild(node);
        }
    }
    function addFindTag() {
        let node = document.createElement("SPAN");
        node.className += "badge badge-pill badge-primary tag";
        node.style.marginLeft = "12px";
        node.id = $("#findTag").val();
        let text_node = document.createTextNode($("#findTag").val());
        node.appendChild(text_node);

        //! adding cross for deleting tag
        let cross_node = document.createElement("I");
        cross_node.className += "fas fa-times tag-cross";
        cross_node.style.paddingLeft = "4px";
        node.appendChild(cross_node);

        if (document.getElementById(node.id) == null) {
            document.getElementById("findTags").appendChild(node);
        }

        //! binding removing of a tag on click
        $(cross_node).on('click', function () {
            $(this).parent().remove();
        });
    }
</script>

@section scripts
{
    <script type="text/javascript">
        $("#submitProductButton").on("click", function (e) {
            var tags_array = [];

            $('#tags > span').each(function () {
                tags_array.push($(this).text());
            });
            var prod_name = $('#productName_add').val();
            //var prod_type = $('#productType_add').val();
            //var prod_cost = $('#productCost_add').val();
            //var prod_discount = $('#productDiscount_add').val();
            //var prod_desc = $('#productDescription_add').val();
            //var prod_img_link = $('#productImageLink_add').val();
            //var prod_img_desc = $('#productImageDescription_add').val();
            //var prod_second_img_link = $('#secondImageLink_add').val();
            //var prod_second_img_desc = $('#secondImageDescription_add').val();
            //var prod_third_img_link = $('#thirdImageLink_add').val();
            //var prod_third_img_desc = $('#thirdImageDescription_add').val();
            //var prod_link = $('#productLink_add').val();

            $.ajax({
                type: "post",
                dataType: "json",
                url: "/Catalog/AddProduct",
                traditional: true,
                data: {
                    productName: prod_name,
                    //productType: prod_type,
                    tags: tags_array,
                    //productCost: prod_cost,
                    //productDiscount: prod_discount,
                    //productDescription: prod_desc,
                    //productImageLink: prod_img_link,
                    //productImageDescription: prod_img_desc,
                    //secondImageLink: prod_second_img_link,
                    //secondImageDescription: prod_second_img_desc,
                    //thirdImageLink: prod_third_img_link,
                    //thirdImageDescription: prod_third_img_desc,
                    //productLink: prod_link
                },
                success: function (data) {
                    console.log(data.message);
                },
            });
        });
    </script>
}

<style>
    img {
        width: 100%;
        max-width: 600px;
        max-height: 400px;
    }

    .expanded-div {
        position: absolute;
    }

    .expanded-a {
        position: absolute;
        text-align: right;
    }

    .expanded-p {
        padding-top: 2em;
        position: absolute;
        text-align: right;
    }

    .expanded-btn {
        position: absolute;
        text-align: center;
    }

    .card-description {
        /*white-space: nowrap;*/
        overflow: hidden;
        text-overflow: ellipsis;
        max-height: 100px;
    }

    .hoverable-btn {
        min-width: 78px !important;
        transition: 1s;
    }

    .hoverable-card {
        transition: 1s;
    }

        .hoverable-card:hover {
            transform: scale(1.05);
        }

    /*https://www.kizu.ru/flexible-overflow/*/
    .overflower {
        /*display: block;*/
        /*overflow: auto;*/
        /*box-sizing: border-box;*/
        /*max-width: 100%;
        height: 1em;
        line-height: 1em;
        white-space: nowrap;
        text-overflow: ellipsis;*/
    }

    .overflower-long {
        display: inline;
    }

    .overflower-short {
        display: none;
    }

    @@supports (flex-wrap: wrap) {
        .overflower {
            display: inline-flex;
            flex-wrap: wrap;
        }

        .overflower-short {
            display: block;
            overflow: hidden;
            flex-grow: 1;
            width: 0;
            text-overflow: ellipsis;
        }

        .overflower-long {
            flex-basis: 100%;
        }
    }
</style>

<div class="text-center">
    <h1 class="display-3">@ViewData["Title"]</h1>
</div>

<div class="float-right">
    <h2>@CatalogViewModel.CurrentUser.MoneyString</h2>
</div>
<div style="padding-bottom:1em"></div>
<div class="d-inline" @*style="padding-bottom:1em"*@>
    <button type="button" class="btn btn-outline-primary" data-toggle="collapse" data-target="#addButtonCollapse" aria-expanded="false" aria-controls="addButtonCollapse">Add Product</button>
</div>
<div class="d-inline" @*style="padding-bottom:1em"*@>
    <button type="button" class="@CatalogViewModel.GetBuyProductButtonClassString()" data-toggle="collapse" data-target="#buyProductCollapse" aria-expanded="false" aria-controls="buyProductCollapse">Buy Product</button>
</div>
<div class="d-inline" @*style="padding-bottom:1em"*@>
    <button type="button" class="btn btn-outline-primary" data-toggle="collapse" data-target="#sellProductCollapse" aria-expanded="false" aria-controls="sellProductCollapse">Sell Product</button>
</div>
<div style="padding-bottom:1em"></div>

@*Add a product div container*@
<div class="row">
    <div class="col">
        <div class="collapse multi-collapse" id="addButtonCollapse">
            <h2 class="display-4 text-center">Adding</h2>
            <div class="card card-body">
                <form asp-controller="Catalog" asp-area="" asp-action="AddProduct" method="post">

                    <div class="form-group">
                        <label for="productName">Product name</label>
                        <input type="text" class="form-control" name="productName" id="productName_add" placeholder="Enter product name" required />
                    </div>

                    <div class="input-group col-md-6">
                        @*<label for="productType">Type</label>*@
                        <select name="productType" id="productType_add" class="custom-select">
                            <option selected>Choose type</option>
                            <option>Software</option>
                            <option>Game</option>
                            <option>Game Engine</option>
                            <option>3D Modeling</option>
                            <option>3D Texturing</option>
                            <option>3D Scanning</option>
                            <option>3D Sculpting</option>
                            <option>Photogrammetry</option>
                            <option>DAW</option>
                            <option>Audio Recording</option>
                            <option>Video Capture</option>
                        </select>
                        <div class="input-group-append">
                            <button class="btn btn-outline-primary btn-sm" type="button" onclick="addTag()">Add new tag</button>
                        </div>
                    </div>
                    <div id="tags" class="pb-4">
                        <!-- There will be all tags -->
                    </div>

                    <div class="form-row">
                        <div class="col-auto">
                            <label for="productCost">Cost</label>
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" name="productCost" id="productCost_add" placeholder="10.99" required>
                                <div class="input-group-append">
                                    <div class="input-group-text">€</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-auto">
                            <label for="productDiscount">Discount</label>
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" name="productDiscount" id="productDiscount_add" placeholder="20" required>
                                <div class="input-group-append">
                                    <div class="input-group-text">%</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="productDescription">Product Description</label>
                        <textarea class="form-control" maxlength="255" name="productDescription" id="productDescription_add" rows="3" placeholder="Enter product description"></textarea>
                    </div>

                    <div class="form-group">
                        <label for="productImageLink">Product Image link</label>
                        <input type="text" class="form-control" name="productImageLink" id="productImageLink_add" placeholder="Enter product image link" />
                        <label for="productImageDescription">Product Image description</label>
                        <input type="text" class="form-control" name="productImageDescription" id="productImageDescription_add" placeholder="Enter product image description" />
                    </div>
                    <div class="form-group">
                        <label for="secondImageLink">Second product Image link</label>
                        <input type="text" class="form-control" name="secondImageLink" id="secondImageLink_add" placeholder="Enter product second image link" />
                        <label for="secondImageDescription">Second Image description</label>
                        <input type="text" class="form-control" name="secondImageDescription" id="secondImageDescription_add" placeholder="Enter second product image description" />
                    </div>
                    <div class="form-group">
                        <label for="thirdImageLink">Third product Image link</label>
                        <input type="text" class="form-control" name="thirdImageLink" id="thirdImageLink_add" placeholder="Enter product third image link" />
                        <label for="thirdImageDescription">Third Image description</label>
                        <input type="text" class="form-control" name="thirdImageDescription" id="thirdImageDescription_add" placeholder="Enter third product image description" />
                    </div>

                    <div class="form-group">
                        <label for="productLink">Product link</label>
                        <input type="text" class="form-control" name="productLink" id="productLink_add" placeholder="Enter product link" />
                    </div>
                    <input type="hidden" class="form-control" name="condition" id="condition_add" value=1 />
                    <button id="submitProductButton" class="btn btn-success" type="submit">Submit product</button>

                </form>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="collapse multi-collapse" id="buyProductCollapse">
            <h2 class="display-4 text-center">Buying</h2>
            <div class="card card-body">
                <form asp-controller="Catalog" asp-area="" asp-action="BuyProduct" method="post">
                    <div class="form-group">
                        <label for="productName">Product name</label>
                        <input type="text" class="form-control" name="productName" id="productName" placeholder="Enter product name" value="@CatalogViewModel.GetSelectedBuyProductName()" required />
                    </div>
                    <button class="@CatalogViewModel.GetSubmitBuyingButtonClassString()" type="submit">
                        @CatalogViewModel.GetSubmitBuyingButtonText()
                    </button>
                </form>
                <p class="text-md-right">
                    <mark>@CatalogViewModel.GetSelectedBuyProductPriceSentence()</mark>
                </p>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col">
        <div class="collapse multi-collapse" id="sellProductCollapse">
            <h2 class="display-4 text-center">Selling</h2>
            <div class="card card-body">
                <form asp-controller="Catalog" asp-area="" asp-action="SellProduct" method="post">
                    <div class="form-group">
                        <label for="productName">Product name</label>
                        <input type="text" class="form-control" name="productName" id="productName" placeholder="Enter product name" value="@CatalogViewModel.GetSelectedSellProductName()" required />
                    </div>
                    <button class="btn btn-success" type="submit">
                        @CatalogViewModel.GetSubmitSellingButtonText()
                    </button>
                </form>
                <p class="text-md-right">
                    <mark>@CatalogViewModel.GetSelectedSellProductPriceSentence()</mark>
                </p>
            </div>
        </div>
    </div>
</div>

<div style="padding-bottom:1em"></div>



@switch (CatalogViewModel.ViewVariant)
{
    case CatalogViewModel.CatalogViewVariant.Table:
        {
            <table class="table table-light table-striped table-hover">
                <thead class="thead-light">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Add</th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByName">
                                Product Name
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByType">
                                Type
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByPrice">
                                Price
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByDiscount">
                                Discount
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark" asp-area="" asp-controller="Catalog" asp-action="SortByFinalPrice">
                                Final
                                <i class="fas fa-sort ml-1"></i>
                            </a>
                        </th>
                        <th scope="col">
                            <a class="text-dark">
                                Link
                            </a>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count; i++)
                    {
                        string tdClassString = CatalogViewModel.ListOfProducts[i].GetPriceTableClassString();
                        string buttonClassString = CatalogViewModel.ListOfProducts[i].GetAddToCartButtonClassString();
                        var linkClass = CatalogViewModel.ListOfProducts[i].GetProductTableLinkClassString();
                        var thClass = CatalogViewModel.ListOfProducts[i].GetTableHeaderClassString();
                        <tr>
                            <th scope="row" class="@thClass">@i</th>
                            <th scope="row" class="@thClass">
                                <form asp-controller="Catalog" asp-action="AddToCart" method="post">
                                    <input type="hidden" class="form-control" name="productName" id="productName" value=@CatalogViewModel.ListOfProducts[i].Name />
                                    <input type="hidden" class="form-control" name="productIndex" id="productIndex" value=@i />
                                    @*<a class="text-dark" name="productName" asp-area="" asp-controller="Catalog" asp-action="AddToCart">
                                            @CatalogViewModel.ListOfProducts[i].IsBoughtString
                                        </a>*@
                                    <button class="@CatalogViewModel.ListOfProducts[i].GetAddToCartButtonClassString()" type="submit">@CatalogViewModel.ListOfProducts[i].IsBoughtString</button>
                                </form>
                            </th>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].Name
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].Type
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].PriceString
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].DiscountString
                            </td>
                            <td class="@tdClassString">
                                @CatalogViewModel.ListOfProducts[i].FinalPriceString
                            </td>
                            <td class="@tdClassString">
                                <a href=@CatalogViewModel.ListOfProducts[i].Link class="@linkClass">
                                    <ins><strong>@CatalogViewModel.ListOfProducts[i].LinkTableString</strong></ins>
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            break;
        }
    case CatalogViewModel.CatalogViewVariant.Main:
        {
            <div class="float-right">
                <div class="card bg-light mb-3" style="max-width: 12rem;">
                    <div class="card-header">About</div>
                    <div class="card-body">
                        <h5 class="card-title">Light card title</h5>
                        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                    </div>
                    <p class="card-text text-center">Tags</p>
                    <div class="input-group col-md-12">
                        @*<label for="findTag">Tags</label>*@
                        <select name="findTag" id="findTag" class="custom-select form-control form-control-sm">
                            <option selected>Choose type</option>
                            <option>Software</option>
                            <option>Game</option>
                            <option>Game Engine</option>
                            <option>3D Modeling</option>
                            <option>3D Texturing</option>
                            <option>3D Scanning</option>
                            <option>3D Sculpting</option>
                            <option>Photogrammetry</option>
                            <option>DAW</option>
                            <option>Audio Recording</option>
                            <option>Video Capture</option>
                        </select>
                        <div class="input-group-append">
                            <button class="btn btn-outline-primary btn-sm" type="button" onclick="addFindTag()">+</button>
                        </div>
                    </div>
                    <div id="findTags" class="pt-2 pb-2">
                        <!-- There will be all tags -->
                    </div>
                    <hr />
                    <div class="ml-3">
                        <div class="custom-control custom-radio custom-control-inline">
                            <input type="radio" id="catalogLength3" name="catalogLength" class="custom-control-input">
                            <label class="custom-control-label" for="catalogLength3">Show 3 items</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline">
                            <input type="radio" id="catalogLength6" name="catalogLength" class="custom-control-input">
                            <label class="custom-control-label" for="catalogLength6">Show 6 items</label>
                        </div>
                        <div class="custom-control custom-radio custom-control-inline">
                            <input type="radio" id="catalogLengthAll" name="catalogLength" class="custom-control-input" value="@CatalogViewModel.ListOfProducts.Count">
                            <label class="custom-control-label" for="catalogLengthAll">Show all items</label>
                        </div>
                    </div>
                    <hr />
                </div>
                <div class="card text-white bg-dark mb-3" style="max-width: 12rem;">
                    <div class="card-header">Characteristics</div>
                    <div class="card-body">
                        <h5 class="card-title">Dark card title</h5>
                        <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                        <ul>
                            <li>
                                first characteristic
                            </li>
                            <li>
                                second characteristic
                            </li>
                            <li>
                                third characteristic
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
            <div class="container-fluid">
                <div class="row row-cols-1 row-cols-md-3">
                    @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count; i++)
                    {
                        var product = CatalogViewModel.ListOfProducts[i];
                        string tdClassString = product.GetPriceTableClassString();
                        string buttonClassString = product.GetAddToCartButtonClassString();
                        var linkClass = product.GetProductTableLinkClassString();
                        var thClass = product.GetTableHeaderClassString();
                        <div class="col col-xs-12 col-sm-12 col-md-6 col-lg-4" style="padding-bottom: 2rem;">
                            <div class="card h-100 hoverable-card" id="card_@i" onmouseover="onHoveredCard(@i)" onmouseout="onHoveredCardOut(@i)">
                                @*<div class="card-header @product.GetTableHeaderClassString()" id="card_header_@i" onclick="onClickedCard(@i)">
                                    <h5 style="font-weight:300">@product.Type</h5>
                                    </div>*@
                                <div style="transform:rotate(0);">
                                    <a href="@product.Link" class="stretched-link">
                                        <img class="d-block w-100 img-fluid catalog-img catalog-main card-img-top" src="@product.GetCardImageSrc()" alt="Cat Lawyer Is Real And He Is Everything Right Now | Above the Law">
                                    </a>
                                    <div class="card-img-overlay">
                                        <h6 style="font-weight:300">@product.Type</h6>
                                    </div>
                                </div>
                                <div class="card-body" style="transform:rotate(0);">
                                    <h5 class="card-title">
                                        @product.Name
                                    </h5>
                                    <div class="overflower" aria-hidden="true">
                                        <p class="card-text card-description">@product.Description</p>
                                    </div>
                                    <a href="@product.Link" class="stretched-link"></a>
                                </div>

                                <div class="card-footer @product.GetTableHeaderClassString()" id="card_footer_@i" onclick="onClickedCard(@i)">
                                    <h3>
                                        @product.FinalPriceString
                                        <sup>
                                            @if (product.Price != product.FinalPrice)
                                            {
                                                <font color="red" style="font-weight:400"><del>@product.PriceString</del></font><sup> -@product.DiscountSupString</sup>
                                            }
                                        </sup>
                                    </h3>
                                    <div class="float-right">
                                        <form asp-controller="Catalog" asp-action="AddToCart" method="post">
                                            <input type="hidden" class="form-control" name="productName" id="productName" value=@product.Name />
                                            <input type="hidden" class="form-control" name="productIndex" id="productIndex" value=@i />
                                            <button class="@product.GetAddToCartButtonClassString() hoverable-btn" type="submit" id="card_addtocart_button_@i" onmouseover="onHoveredButton(@i)" onmouseout="onHoveredButtonOut(@i)">@product.GetAddToCartButtonString()</button>
                                        </form>
                                    </div>
                                    <small class="text-warning @product.GetProductTableLinkClassString()">
                                        Added @product.AddedDate.ToShortDateString()
                                    </small>

                                </div>
                                <div id="card_expand_@i"></div>
                            </div>
                            @*</a>*@
                        </div>
                    }
                </div>
            </div>
            break;
        }
}

<!-- TEST -->
<div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
    <ol class="carousel-indicators">
        @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count; i++)
        {
            @if (i > 0)
            {
                <li data-target="#carouselExampleIndicators" data-slide-to="@i"></li>
            }
            else
            {
                <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="active"></li>
            }
        }
    </ol>
    <div class="carousel-inner">
        <div class="container-fluid">
            <div class="row row-cols-1 row-cols-md-3">
                @for (int i = 0; i < CatalogViewModel.ListOfProducts.Count; i++)
                {
                    @if (i > 0)
                    {
                        <div class="carousel-item">
                            body
                        </div>
                    }
                    else
                    {
                        <div class="carousel-item active">
                            body
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="sr-only">Next</span>
    </a>
</div>
<!-- END TEST -->

<div style="padding-bottom:1em"></div>
<div class="d-inline" @*style="padding-bottom:1em"*@>
    <form asp-controller="Catalog" asp-action="ChangeView" method="post">
        <input type="hidden" class="form-control" name="viewVariant" id="viewVariant" value=@CatalogViewModel.ViewVariant />
        @*<a class="text-dark" name="productName" asp-area="" asp-controller="Catalog" asp-action="AddToCart">
                @CatalogViewModel.ListOfProducts[i].IsBoughtString
            </a>*@
        <button type="submit" class="btn btn-outline-primary">Change View</button>
    </form>
</div>

Icons made by <a href="https://www.flaticon.com/authors/freepik" title="Freepik">Freepik</a> from <a href="https://www.flaticon.com/" title="Flaticon"> www.flaticon.com</a>

