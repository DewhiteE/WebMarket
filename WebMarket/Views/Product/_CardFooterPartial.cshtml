@model WebMarket.Models.Product
@inject IMainRepository _repository
@inject Microsoft.AspNetCore.Identity.UserManager<AppUser> _userManager

@{
    var currentUser = _userManager.GetUserAsync(User).Result;

<div class="card-footer @Model.GetTableHeaderClassString(_repository, currentUser)" id="card_on_transaction_footer">

    <h3>
        @Model.FinalPriceString
        <sup>
            @if (Model.Price != Model.FinalPrice)
            {
                <font color="red" style="font-weight:400"><del>@Model.PriceString</del></font><sup> -@Model.DiscountSupString</sup>
            }
        </sup>
    </h3>

    @if (Model.OwnerID == currentUser?.Id || currentUser == null)
    {
        <small class="text-warning @Model.GetProductTableLinkClassString(_repository, currentUser)">
            Added @Model.AddedDate.ToShortDateString()
        </small>
    }
    else if (!Model.IsBought(_repository, currentUser) && currentUser != null)
    {
        <div class="float-right">
                <button class="@CatalogViewModel.GetBuyProductButtonClassString(currentUser, false) btn-lg" type="submit" data-toggle="modal" data-target="#buyModal"
                        id="card_on_transaction_buy_button">Buy</button>
        </div>
        @*<div class="float-right">
            <form asp-controller="Product" asp-action="Buy" method="post" asp-route-productId="@Model.ID">
                <button class="@CatalogViewModel.GetBuyProductButtonClassString(_repository, currentUser, false) btn-lg" type="submit" id="card_on_transaction_buy_button">
                Buy
                </button>
            </form>
        </div>*@

        @*<br>
        <p class="text-md-left">
            You will have:
            <mark>@CatalogViewModel.GetSelectedBuyProductPriceSentence(_repository, currentUser)</mark>
        </p>*@
        <small class="text-warning @Model.GetProductTableLinkClassString(_repository, currentUser)">
            Added @Model.AddedDate.ToShortDateString()
        </small>
    }
    else if (currentUser != null)
    {
        <div class="float-right">
                <button class="btn btn-primary btn-lg" type="submit" data-toggle="modal" data-target="#sellModal"
                        id="card_on_transaction_sell_button">Sell</button>
        </div>

        @*<div class="float-right">
            <form asp-controller="Product" asp-action="Sell" method="post" asp-route-productId="@Model.ID">
                <button class="btn btn-primary btn-lg" type="submit" id="card_on_transaction_sell_button">Sell</button>
            </form>
        </div>*@

        <br>
        <small class="text-warning @Model.GetProductTableLinkClassString(_repository, currentUser)">
            Added @Model.AddedDate.ToShortDateString()
        </small>
    }
</div>

<div class="modal fade" id="buyModal" tabindex="-1" role="dialog" aria-labelledby="buyModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="buyModal">Are you sure you want to buy @Model.Name?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Price: @Model.PriceString
                Discount: @Model.DiscountString
                Final Price: @Model.FinalPriceString
                <p class="text-md-left pt-3">
                    You will have:
                    <mark>@CatalogViewModel.GetSelectedBuyProductPriceSentence(currentUser)</mark>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                <div class="float-right">
                    <form asp-controller="Product" asp-action="Buy" asp-route-productId="@Model.ID">
                        <button class="btn btn-success" type="submit" id="card_on_transaction_sell_button">Buy</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="sellModal" tabindex="-1" role="dialog" aria-labelledby="sellModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="sellModal">Are you sure you want to sell @Model.Name?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Price: @Model.PriceString<br />
                Discount: @Model.DiscountString<br />
                Final Price: @Model.FinalPriceString<br />
                <p class="text-md-left pt-3">
                    You will have:
                    <mark>@CatalogViewModel.GetSelectedSellProductPriceSentence(_repository, currentUser)</mark>
                </p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-dismiss="modal">Close</button>
                <div class="float-right">
                    <form asp-controller="Product" asp-action="Sell" asp-route-productId="@Model.ID">
                        <button class="btn btn-warning" type="submit" id="card_on_transaction_sell_button">Sell</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

}
