@using Microsoft.AspNetCore.Identity
@using WebMarket.Data

@model ProductPageViewModel
@inject IMainRepository _repository
@inject Microsoft.AspNetCore.Hosting.IHostingEnvironment _hostingEnvironment
@inject UserManager<AppUser> _userManager

@{
    ViewData["Title"] = "Product page";

    ProductPageViewModel.CurrentAppUser = _userManager.GetUserAsync(User).Result;
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<link href="~/css/comments.css" rel="stylesheet" type="text/css" />
<link href="~/css/images.css" rel="stylesheet" type="text/css" />
<link href="~/css/ratingtable.css" rel="stylesheet" type="text/css" />

<script src="https://code.jquery.com/jquery-1.12.0.min.js"></script>
<style>
    .checked {
        color: orange;
    }

    .not-checked {
        color: #ddd;
    }
</style>

@{
    var product = CatalogViewModel.GetSelectedBuyProduct(_repository);
    var currentUser = _userManager.GetUserAsync(User).Result;

    @if (product.OwnerID != currentUser?.Id)
    {
        <div class="float-right">
            @*<h2>@CatalogViewModel.CurrentUser.MoneyString</h2>*@
            <h2>@currentUser?.MoneyString</h2>
        </div>
    }
    <h1>@product.Name</h1>
    <br>


    @if (product.OwnerID == currentUser?.Id)
    {
        <div style="padding-bottom:1em"></div>
        <form class="d-inline" asp-controller="Product" asp-action="OpenEditProduct" method="post">
            <div class="d-inline" @*style="padding-bottom:1em"*@>
                <input type="hidden" class="form-control" name="prodId" value="@product.ID" />
                <button asp-controller="Product" asp-action="OpenEditProduct" type="submit" class="btn btn-primary">Edit Product</button>
            </div>
        </form>
        <div class="d-inline">
            <button type="button" class="btn btn-primary">Edit Page</button>
        </div>
    }
    <div style="padding-bottom:1em"></div>


    <div class="float-left" style="padding-right:2em">
        <div class="card bg-light mb-3" style="max-width: 28rem;">
            @*<div class="card-header">About</div>*@
            <div class="card-body">
                <h5 class="card-title">About</h5>
                @if (product.OwnerID == currentUser?.Id)
                {
                    <p class="card-text">Owner: <b>You</b></p>
                }
                else
                {
                    <p class="catd-text">Owner: <b>@product.GetOwnerName()</b></p>
                }
                <p>Added at: <b>@product.AddedDate.ToShortDateString()</b></p>
                <hr />
                <p class="card-text"><b>Current version: 1.0.0</b></p>
                <p></p>
                @if ((product.IsBought(_repository, currentUser) || product.OwnerID == currentUser?.Id) && product.FileName?.Length > 0)
                {
                    <p class="card-text float-right">Size: @product.FormatFileSize(_hostingEnvironment)</p>
                    <a class="card-link btn btn-primary" href="~/file/@product.FileName" download>Download</a>
                }
                <p></p>
            </div>
        </div>
    </div>

    <div class="card h-100 hoverable-card" id="card_on_transaction">
        <div class="card-header @product.GetTableHeaderClassString(_repository, currentUser)" id="card_on_transaction_header">
            <h5 style="font-weight:300">@product.Type</h5>
        </div>
        <partial name="~/Views/Product/_ProductImageCarouselPartial.cshtml" model='@new ProductImageCarouselViewModel(product, "catalog-buy")' />
        <partial name="~/Views/Product/_CardBodyPartial.cshtml" model="@product" />
        <partial name="~/Views/Product/_CardFooterPartial.cshtml" model="@product" />
    </div>
    if (!product.OnlyRegisteredCanComment && product.OwnerID != currentUser?.Id)
    {
        <form asp-controller="Catalog" asp-action="AddComment" method="post">
            <div class="form-group">
                <label for="commentSection">Your comment:</label>
                <textarea class="form-control" maxlength="255" name="commentSection" id="commentSection" rows="3" placeholder="Enter comment"></textarea>
                <input type="hidden" class="form-control" name="productID" id="productID" value=@product.ID />
                <fieldset class="rating" name="rating-field" id="rating-field" style="float:right">
                    <input type="radio" id="star5" name="rating" value="5" /><label class="full" for="star5" title="Awesome - 5 stars"></label>
                    <input type="radio" id="star4half" name="rating" value="4.5" /><label class="half" for="star4half" title="Pretty good - 4.5 stars"></label>
                    <input type="radio" id="star4" name="rating" value="4" /><label class="full" for="star4" title="Pretty good - 4 stars"></label>
                    <input type="radio" id="star3half" name="rating" value="3.5" /><label class="half" for="star3half" title="Meh - 3.5 stars"></label>
                    <input type="radio" id="star3" name="rating" value="3" /><label class="full" for="star3" title="Meh - 3 stars"></label>
                    <input type="radio" id="star2half" name="rating" value="2.5" /><label class="half" for="star2half" title="Kinda bad - 2.5 stars"></label>
                    <input type="radio" id="star2" name="rating" value="2" /><label class="full" for="star2" title="Kinda bad - 2 stars"></label>
                    <input type="radio" id="star1half" name="rating" value="1.5" /><label class="half" for="star1half" title="Meh - 1.5 stars"></label>
                    <input type="radio" id="star1" name="rating" value="1" /><label class="full" for="star1" title="Sucks big time - 1 star"></label>
                    <input type="radio" id="starhalf" name="rating" value="0.5" /><label class="half" for="starhalf" title="Sucks big time - 0.5 stars"></label>
                </fieldset>
            </div>
            <button class="btn btn-success" type="submit">Submit</button>
        </form>

        //await Html.PartialAsync("_AddCommentPartial", new ViewDataDictionary(ViewData) { { "id", product.ID } });
        //<partial name=""_AddCommentPartial" view-data="product.ID.ToString()"/>
        //await Html.PartialAsync("_AddCommentPartial", product.ID.ToString());

        //<h1>Pure CSS Star Rating Widget</h1>
    }
    <div class="col col-sm-12 col-md-12 col-lg-6" style="padding-top: 2rem;">
        <div class="card h-100 hoverable-card" id="card_on_transaction">
            <partial name="~/Views/Product/_RatingTablePartial.cshtml" model="@new ProductRatingTableViewModel(product)" />
            <partial name="~/Views/Product/_CommentSectionPartial.cshtml" for="@product" />
        </div>
    </div>
}

@section Scripts
{
    <script>

        $(document).ready(function() {
            $($(".lbar").get().reverse()).each(function (index, element) {
                $(element).width(getFinalWidth(index+1)*100 + '%');
            });
        });

        function getFinalWidth(index) {
            switch (index) {
                case 1: return @CatalogViewModel.GetSelectedBuyProduct(_repository)?.GetStarsPercent(1, _repository);
                case 2: return @CatalogViewModel.GetSelectedBuyProduct(_repository)?.GetStarsPercent(2, _repository);
                case 3: return @CatalogViewModel.GetSelectedBuyProduct(_repository)?.GetStarsPercent(3, _repository);
                case 4: return @CatalogViewModel.GetSelectedBuyProduct(_repository)?.GetStarsPercent(4, _repository);
                case 5: return @CatalogViewModel.GetSelectedBuyProduct(_repository)?.GetStarsPercent(5, _repository);
            }
        };

    </script>
}

